class Solution {
public:
    vector<vector<int>> TwoSum(vector<int>& nums,int start,int end,int target,int value)
    {
        //双指针
        vector<vector<int>> res;
       while(start<end)
       {
           int sum=nums[start]+nums[end];
           if(sum==target)
           {
               vector<int> vec;
               vec.push_back(nums[start]);
               vec.push_back(nums[end]);
               vec.push_back(value);
               res.push_back(vec);
          
           while(start<end&&nums[start]==nums[start+1])
           {
               start++;
           }
           start++;
           while(start<end&&nums[end]==nums[end-1])
           {
               end--;
           }
           end--;
            }
           else if(sum>target)
           {
               end--;
           }
           else 
           {
               start++;
           }

       }
       return res;
        
    }



    vector<vector<int>> threeSum(vector<int>& nums) {
      vector<vector<int>> res;
      sort(nums.begin(),nums.end());
      for(int i=0;i<nums.size();i++)
      {
          if(i>0&&nums[i]==nums[i-1])  continue;
         auto result= TwoSum(nums,i+1,nums.size()-1,-nums[i],nums[i]);
         //res.push_back(result);
         res.insert(res.end(),result.begin(),result.end());
      }
        
     return res;

    }
};
